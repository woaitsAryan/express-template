{
    "compilerOptions": {
        /* For faster builds */
        "incremental": true /* Save .tsbuildinfo files to allow for incremental compilation of projects. */,
        "tsBuildInfoFile": "./build/.tsbuildinfo" /* Specify the path to .tsbuildinfo incremental compilation file. */,
        /* Language and Environment */
        "target": "es2017" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
        /* Modules */
        "module": "commonjs" /* Specify what module code is generated. */,
        "moduleResolution": "Node" /* Specify how TypeScript looks up a file from a given module specifier. */,
        "typeRoots": [
            "./node_modules/@types",
            "./src/types"
        ] /* Specify multiple folders that act like './node_modules/@types'. */,
        /* Emit configuration */
        "sourceMap": true /* Create source map files for emitted JavaScript files. */,
        "outDir": "build" /* Specify an output folder for all emitted files. */,
        "removeComments": true /* Disable emitting comments. */,
        "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
        "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
        /* Type Checking */
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
        "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
        "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
        "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
        "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
        "allowUnusedLabels": false /* Disable error reporting for unused labels. */,
        "allowUnreachableCode": false /* Disable error reporting for unreachable code. */,
        /* Completeness */
        "skipLibCheck": false /* Skip type checking all .d.ts files. */,
        "baseUrl": "./",
        "paths": { "@/*": ["./src/*"] }
    },
    "exclude": [
        "node_modules",
        "build",
        "tests"
    ],
    "include": [
        "./src/**/*"
    ],
}